
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.6.0
 * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
 */
Prisma.prismaVersion = {
  client: "6.6.0",
  engine: "f676762280b54cd07c770017ed3711ddde35f37a"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  number_phone: 'number_phone',
  password: 'password',
  refresh_token_id: 'refresh_token_id',
  google_id: 'google_id',
  role_id: 'role_id',
  is_delete: 'is_delete'
};

exports.Prisma.TokenScalarFieldEnum = {
  id: 'id',
  token: 'token',
  created_at: 'created_at',
  expired_at: 'expired_at',
  email: 'email',
  user_id: 'user_id'
};

exports.Prisma.RefreshTokenScalarFieldEnum = {
  id: 'id',
  refresh_token: 'refresh_token',
  created_at: 'created_at',
  expired_at: 'expired_at'
};

exports.Prisma.ValidationStatusScalarFieldEnum = {
  id: 'id',
  status: 'status'
};

exports.Prisma.DamageLevelScalarFieldEnum = {
  id: 'id',
  level: 'level'
};

exports.Prisma.ReportsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  desc: 'desc',
  lat: 'lat',
  long: 'long',
  location: 'location',
  is_district_validate: 'is_district_validate',
  is_pupr_validate: 'is_pupr_validate',
  video_url: 'video_url',
  user_id: 'user_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_delete: 'is_delete',
  notes: 'notes',
  validation_stat_id: 'validation_stat_id',
  damage_level_id: 'damage_level_id'
};

exports.Prisma.CommentsScalarFieldEnum = {
  id: 'id',
  comment: 'comment',
  created_at: 'created_at',
  user_id: 'user_id',
  report_id: 'report_id'
};

exports.Prisma.ReportImagesScalarFieldEnum = {
  id: 'id',
  image_url: 'image_url',
  report_id: 'report_id'
};

exports.Prisma.RolesScalarFieldEnum = {
  id: 'id',
  role: 'role'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UsersOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  number_phone: 'number_phone',
  password: 'password',
  refresh_token_id: 'refresh_token_id',
  google_id: 'google_id'
};

exports.Prisma.TokenOrderByRelevanceFieldEnum = {
  id: 'id',
  token: 'token',
  email: 'email',
  user_id: 'user_id'
};

exports.Prisma.RefreshTokenOrderByRelevanceFieldEnum = {
  id: 'id',
  refresh_token: 'refresh_token'
};

exports.Prisma.ValidationStatusOrderByRelevanceFieldEnum = {
  status: 'status'
};

exports.Prisma.DamageLevelOrderByRelevanceFieldEnum = {
  level: 'level'
};

exports.Prisma.ReportsOrderByRelevanceFieldEnum = {
  id: 'id',
  title: 'title',
  desc: 'desc',
  location: 'location',
  video_url: 'video_url',
  user_id: 'user_id',
  notes: 'notes'
};

exports.Prisma.CommentsOrderByRelevanceFieldEnum = {
  id: 'id',
  comment: 'comment',
  user_id: 'user_id',
  report_id: 'report_id'
};

exports.Prisma.ReportImagesOrderByRelevanceFieldEnum = {
  image_url: 'image_url',
  report_id: 'report_id'
};

exports.Prisma.RolesOrderByRelevanceFieldEnum = {
  role: 'role'
};


exports.Prisma.ModelName = {
  Users: 'Users',
  Token: 'Token',
  RefreshToken: 'RefreshToken',
  ValidationStatus: 'ValidationStatus',
  DamageLevel: 'DamageLevel',
  Reports: 'Reports',
  Comments: 'Comments',
  ReportImages: 'ReportImages',
  Roles: 'Roles'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
